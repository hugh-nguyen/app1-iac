apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-a
  labels:
    app: service-a
spec:
  replicas: {{ .Values.serviceA.replicas }}
  selector:
    matchLabels:
      app: service-a
  template:
    metadata:
      labels:
        app: service-a
    spec:
      serviceAccountName: ecr-access-sa
      containers:
        - name: service-a
          image: {{ .Values.serviceA.image }}
          ports:
            - containerPort: {{ .Values.serviceA.containerPort }}
          env:
            - name: SERVICE_B_URL
              value: "{{ .Values.serviceA.serviceBUrl }}"
---
apiVersion: v1
kind: Service
metadata:
  name: service-a
  labels:
    app: service-a
spec:
  selector:
    app: service-a
  ports:
    - name: http
      port: 80
      targetPort: {{ .Values.serviceA.containerPort }}
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: service-a-ingress
  annotations:
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/target-type: "ip"
    alb.ingress.kubernetes.io/backend-protocol: "HTTP"
    alb.ingress.kubernetes.io/load-balancer-name: "eks-lb"
    alb.ingress.kubernetes.io/group.name: "eks-ingress-group"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/security-groups: "sg-0353e8632c4d0bd2d"
    alb.ingress.kubernetes.io/subnets: "subnet-01d45bcc981e8d75e,subnet-05c33b49c60160c9c"
    alb.ingress.kubernetes.io/actions.forward-to-tg: '{"Type": "forward", "TargetGroupArn": "arn:aws:elasticloadbalancing:ap-southeast-2:495599745704:targetgroup/eks-tg/arn:aws:elasticloadbalancing:ap-southeast-2:495599745704:targetgroup/eks-tg/f475c5870c9686d3"}'
spec:
  ingressClassName: alb
  rules:
    - host: service-a.yourdomain.com
      http:
        paths:
          - path: /a/
            pathType: Prefix
            backend:
              service:
                name: forward-to-tg
                port:
                  number: 80
